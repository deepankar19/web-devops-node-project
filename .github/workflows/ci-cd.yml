name: CI/CD Pipeline

on:
  push:
    branches:
    - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Build frontend
      working-directory: ./frontend
      run: |
        npm install
        npm run build

    - name: Build backend
      working-directory: ./backend
      run: |
        npm install

    - name: Build Docker images
      run: |
        docker build -t devilvires/inter-frontend-app:01 ./frontend
        docker build -t devilvires/inter-backend-app:01 ./backend

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker images
      run: |
        docker push devilvires/inter-frontend-app:01
        docker push devilvires/inter-backend-app:01

    - name: Deploy to AWS
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    # - name: Setup Terraform
    #   uses: hashicorp/setup-terraform@v2
    #   with:
    #     terraform_version: 1.1.7

    # - name: Terraform Init
    #   run: terraform init
    #   working-directory: ./terraform

    # - name: Terraform Apply
    #   run: terraform apply -auto-approve
    #   working-directory: ./terraform

    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

    - name: Update kubeconfig
      run: aws eks update-kubeconfig --name demo-cluster --region us-east-1

    - name: Deploy to EKS
      run: |
        kubectl apply -f k8s/frontend-deployment.yaml
        kubectl apply -f k8s/frontend-service.yaml
        kubectl apply -f k8s/backend-deployment.yaml
        kubectl apply -f k8s/backend-service.yaml
        kubectl apply -f k8s/frontend-hpa.yaml
        kubectl apply -f k8s/backend-hpa.yaml

    # - name: Install Helm
#   run: |
#     curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

# - name: Deploy Prometheus using Helm
#   run: |
#     helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
#     helm repo update
#     helm install prometheus prometheus-community/prometheus --namespace monitoring --create-namespace

# - name: Deploy Grafana using Helm
#   run: |
#     helm repo add grafana https://grafana.github.io/helm-charts
#     helm repo update
#     helm install grafana grafana/grafana --namespace monitoring --set adminPassword=admin --set persistence.enabled=false --set service.type=LoadBalancer
